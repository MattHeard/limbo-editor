#!/usr/bin/env ruby

class Subcommand
  DESCRIPTIONS = {
    'new' => 'creates a new project',
    'list-tests' => 'lists test descriptions'
  }.freeze

  def initialize(name)
    @name = name
  end

  def description
    descriptions[name]
  end

  def name
    @name
  end

  private

  def descriptions
    DESCRIPTIONS
  end
end

def subcommand_descriptions
  subcommand_descriptions = {
    'new' => Subcommand.new('new').description,
    'list-tests' => Subcommand.new('list-tests').description
  }
  subcommand_descriptions.default = 'Limbo EDitor'
  subcommand_descriptions
end

def subcommand
  ARGV.first
end

def help?
  ARGV[1] == '--help'
end

def show_help
  puts subcommand_descriptions[subcommand]
end

def test_dir
  './tmp/spec'
end

def test_contents
  %x{cat #{test_dir}/*}
end

def feature_descriptions
  test_contents.split("\n")
end

def matches
  feature_descriptions.map { |d| d.match(/describe '(.*)'/) }
end

def features
  matches.map { |m| m[1] }
end

class FeatureSet
end

def list_features
  puts features.join("\n")
end

def list_features?
  subcommand == 'list-tests' && !help?
end

if list_features?
  list_features
else
  show_help
end
