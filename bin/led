#!/usr/bin/env ruby

require_relative '../lib/subcommand'

def subcommand_descriptions
  subcommand_descriptions = {
    'new' => Subcommand.new('new').description,
    'list-tests' => Subcommand.new('list-tests').description
  }
  subcommand_descriptions.default = 'Limbo EDitor'
  subcommand_descriptions
end

def subcommand
  ARGV.first
end

def help?
  ARGV[1] == '--help'
end

def show_help
  puts subcommand_descriptions[subcommand]
end

def test_dir
  './tmp/spec'
end

class FeatureSet
  def initialize(test_dir)
    @test_dir = test_dir
  end

  def print_list
    puts features.join("\n")
  end

  private

  attr_reader :test_dir

  def features
    matches.map { |m| m[1] }
  end

  def matches
    feature_descriptions.map { |d| d.match(/describe '(.*)'/) }
  end

  def feature_descriptions
    test_contents.split("\n")
  end

  def test_contents
    %x{cat #{test_dir}/*}
  end
end

def list_features?
  subcommand == 'list-tests' && !help?
end

def list_features
  feature_set.print_list
end

def feature_set
  FeatureSet.new(test_dir)
end

if list_features?
  list_features
else
  show_help
end
